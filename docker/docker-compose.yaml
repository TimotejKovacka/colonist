services:
  traefik:
    image: traefik:v2.10
    command:
      # Enable Docker provider and file provider for local services
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--providers.file.directory=/etc/traefik/config"
      # Define entrypoints
      - "--entrypoints.web.address=:80"
      # Enable dashboard for debugging (optional)
      - "--api.insecure=true"
      - "--api.dashboard=true"
      # Debugging
      - "--log.level=DEBUG"
      - "--accesslog=true"
      - "--accesslog.fields.headers.defaultmode=keep"
    ports:
      - "80:80"
      - "8080:8080" # Traefik dashboard
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./traefik:/etc/traefik/config"
    networks:
      - app-network
    extra_hosts:
      - "host.docker.internal:host-gateway"

  postgres:
    image: postgres:17-alpine
    ports:
      - 5432:5432
    environment:
      - POSTGRES_PASSWORD=admin
      - POSTGRES_USER=admin
      - POSTGRES_DB=test_db
    networks:
      - app-network

  adminer:
    image: adminer:latest
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.adminer.rule=Host(`localhost`) && PathPrefix(`/adminer`)"
      - "traefik.http.services.adminer.loadbalancer.server.port=8080"
      - "traefik.http.middlewares.adminer-strip.stripprefix.prefixes=/adminer"
      - "traefik.http.routers.adminer.middlewares=adminer-strip"
    networks:
      - app-network
    depends_on:
      - postgres

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    networks:
      - app-network

  redis-insight:
    image: redis/redisinsight:latest
    ports:
      - "5540:5540"
    volumes:
      - redis-insight:/data
    networks:
      - app-network
    depends_on:
      - redis

volumes:
  redis_data:
  redis-insight:

networks:
  app-network:
    driver: bridge
